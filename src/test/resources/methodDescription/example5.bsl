///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2020, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////
// Дополнительные настройки отчета по умолчанию, определяющие:
//  * Признак формирования отчета при открытии;
//  * Подключаемые обработчики событий;
//  * Настройки печати;
//  * Использование функции расчетных показателей;
//  * Права.
//
// Возвращаемое значение:
//   Структура - настройки (дополнительные свойства) отчета, хранящиеся в данных формы:
//
//       * ФормироватьСразу - Булево - значение по умолчанию для флажка "Формировать сразу".
//           Когда флажок включен, то отчет будет формироваться после открытия,
//           после выбора пользовательских настроек, после выбора другого варианта отчета.
//
//       * ВыводитьСуммуВыделенныхЯчеек - Булево - если Истина, то в отчете будет выводиться поле автосуммы.
//
//       * РазрешеноИзменятьСтруктуру - Булево - если Ложь, то в настройках отчета будет скрыта вкладка "Структура".
//           Если Истина, то вкладка "Структура" показывается для отчетов на СКД: в расширенном режиме,
//           а также в простом режиме, если в пользовательские настройки выведены флажки использования группировок.
//
//       * РазрешеноИзменятьВарианты - Булево - если Ложь, то блокируются кнопки изменения вариантов этого отчета.
//           Если у текущего пользователя нет прав "СохранениеДанныхПользователя" и "Добавление"
//           справочника ВариантыОтчетов, то принудительно устанавливается в Ложь.
//
//       * РазрешеноВыбиратьИНастраиватьВариантыБезСохранения - Булево - если Истина,
//           то есть возможность выбора и настройки предопределенных вариантов отчета, но без возможности сохранения
//           выполненных настроек. Например, может быть задано для контекстных отчетов (открываемых с параметрами),
//           у которых есть несколько вариантов.
//
//       * ПараметрыРасположенияЭлементовУправления - Структура
//                                                  - Неопределено - варианты:
//           - Неопределено - параметры элементов управления общей формы отчетов "по умолчанию".
//           - Структура - с именами настройки в коллекции НастройкиКомпоновкиДанных свойства Настройки
//                         типа КомпоновщикНастроекКомпоновкиДанных:
//               ** Отбор           - Массив - как у следующего свойства.
//               ** ПараметрыДанных - Структура - со свойствами поля формы:
//                    *** Поле                     - Строка - имя поля, отображение которого настраивается.
//                    *** РастягиватьПоГоризонтали - Булево - значение свойства поля формы.
//                    *** АвтоМаксимальнаяШирина   - Булево - значение свойства поля формы.
//                    *** Ширина                   - Число  - значение свойства поля формы.
//
//            Пример определения описываемого параметра:
//
//               МассивНастроек              = Новый Массив;
//               НастройкиЭлементаУправления = Новый Структура;
//               НастройкиЭлементаУправления.Вставить("Поле",                     "СписокРегистров");
//               НастройкиЭлементаУправления.Вставить("РастягиватьПоГоризонтали", Ложь);
//               НастройкиЭлементаУправления.Вставить("АвтоМаксимальнаяШирина",   Истина);
//               НастройкиЭлементаУправления.Вставить("Ширина",                   40);
//
//               МассивНастроек.Добавить(НастройкиЭлементаУправления);
//
//               НастройкиЭлементовУправления = Новый Структура();
//               НастройкиЭлементовУправления.Вставить("ПараметрыДанных", МассивНастроек);
//
//               Возврат НастройкиЭлементовУправления;
//
//       * ЗагрузитьНастройкиПриИзмененииПараметров - Массив - коллекция параметров компоновки данных,
//                                                    изменение которых, приводит к переформированию
//                                                    Схемы компоновки данных.
//
//               // Пример:
//               // 1. Инициализация:
//               //	Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
//               //		Настройки.ЗагрузитьНастройкиПриИзмененииПараметров = Отчеты.УниверсальныйОтчет.ЗагрузитьНастройкиПриИзмененииПараметров();
//               //	КонецПроцедуры
//
//               //	Функция ЗагрузитьНастройкиПриИзмененииПараметров() Экспорт
//               //		Параметры = Новый Массив;
//               //		Параметры.Добавить(Новый ПараметрКомпоновкиДанных("ТипОбъектаМетаданных"));
//               //		Параметры.Добавить(Новый ПараметрКомпоновкиДанных("ИмяОбъектаМетаданных"));
//               //		Параметры.Добавить(Новый ПараметрКомпоновкиДанных("ИмяТаблицы"));
//               //
//               //		Возврат Параметры;
//               //	КонецФункции
//
//               // 2. Использование:
//               //	Процедура Подключаемый_ЭлементНастройки_ПриИзменении(Элемент)
//               //		...
//               //		Если ТипЗнч(ЭлементПользовательскойНастройки) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных")
//               //			И НастройкиОтчета.ЗагрузитьНастройкиПриИзмененииПараметров.Найти(ЭлементПользовательскойНастройки.Параметр) <> Неопределено Тогда
//               //			// Вызов метода переформирования Схемы компоновки данных...
//               //		КонецЕсли;
//
//       * СкрытьКомандыРассылки - Булево - флаг, позволяющий скрыть команды рассылок, у тех отчетов,
//           для которых рассылка не имеет смысла.
//           Истина              - команды рассылок будут скрыты,
//           Ложь (по умолчанию) - команды будут доступны.
//
//       * Печать - Структура - параметры печати табличного документа "по умолчанию":
//           ** ПолеСверху - Число - отступ сверху при печати (в миллиметрах).
//           ** ПолеСлева  - Число - отступ слева  при печати (в миллиметрах).
//           ** ПолеСнизу  - Число - отступ снизу  при печати (в миллиметрах).
//           ** ПолеСправа - Число - отступ справа при печати (в миллиметрах).
//           ** ОриентацияСтраницы - ориентацияСтраницы - "Портрет" или "Ландшафт".
//           ** АвтоМасштаб - Булево - автоматически подгонять масштаб под размер страницы.
//           ** МасштабПечати - Число - масштаб изображения (в процентах).
//
//       * События - Структура - события, для которых определены обработчики в модуле объекта отчета:
//
//           ** ПриСозданииНаСервере - Булево - если Истина, то в модуле объекта отчета
//               следует определить обработчик события по шаблону:
//
//               // Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//               //
//               // Параметры:
//               //   Форма - ФормаКлиентскогоПриложения - форма отчета.
//               //   Отказ - Булево - признак отказа от создания формы.
//               //      См. описание одноименного параметра "ФормаКлиентскогоПриложения.ПриСозданииНаСервере" в синтакс-помощнике.
//               //   СтандартнаяОбработка - Булево - признак выполнения стандартной (системной) обработки события.
//               //      См. описание одноименного параметра "ФормаКлиентскогоПриложения.ПриСозданииНаСервере" в синтакс-помощнике.
//               //
//               // См. также:
//               //   Процедура для вывода добавленных команд в форму: ОтчетыСервер.ВывестиКоманду().
//               //   Глобальный обработчик этого события: ОтчетыПереопределяемый.ПриСозданииНаСервере().
//               //
//               // Пример добавления команды:
//               //	Команда = Форма.Команды.Добавить("<ИмяКоманды>");
//               //	Команда.Действие  = "Подключаемый_Команда";
//               //	Команда.Заголовок = НСтр("ru = '<Представление команды...>'");
//               //	ОтчетыСервер.ВывестиКоманду(Форма, Команда, "<ВидГруппы>");
//               // Обработчик команды пишется в процедуре ОтчетыКлиентПереопределяемый.ОбработчикКоманды.
//               //
//               Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
//               	// Обработка события.
//               КонецПроцедуры
//
//           ** ПередЗагрузкойНастроекВКомпоновщик - Булево - если Истина, то в модуле объекта отчета
//               следует определить обработчик события по шаблону:
//
//               // Вызывается перед загрузкой новых настроек. Используется для изменения схемы компоновки.
//               //   Например, если схема отчета зависит от ключа варианта или параметров отчета.
//               //   Чтобы изменения схемы вступили в силу следует вызывать метод ОтчетыСервер.ПодключитьСхему().
//               //
//               // Параметры:
//               //   Контекст - Произвольный -
//               //       Параметры контекста, в котором используется отчет.
//               //       Используется для передачи в параметрах метода ОтчетыСервер.ПодключитьСхему().
//               //   КлючСхемы - Строка -
//               //       Идентификатор текущей схемы компоновщика настроек.
//               //       По умолчанию не заполнен (это означает что компоновщик инициализирован на основании основной схемы).
//               //       Используется для оптимизации, чтобы переинициализировать компоновщик как можно реже.
//               //       Может не использоваться если переинициализация выполняется безусловно.
//               //   КлючВарианта - Строка, Неопределено -
//               //       Имя предопределенного или уникальный идентификатор пользовательского варианта отчета.
//               //       Неопределено когда вызов для варианта расшифровки или без контекста.
//               //   НовыеНастройкиКД - НастройкиКомпоновкиДанных, Неопределено -
//               //       Настройки варианта отчета, которые будут загружены в компоновщик настроек после его инициализации.
//               //       Неопределено когда настройки варианта не надо загружать (уже загружены ранее).
//               //   НовыеПользовательскиеНастройкиКД - ПользовательскиеНастройкиКомпоновкиДанных, Неопределено -
//               //       Пользовательские настройки, которые будут загружены в компоновщик настроек после его инициализации.
//               //       Неопределено когда пользовательские настройки не надо загружать (уже загружены ранее).
//               //
//               // Примеры:
//               // 1. Компоновщик отчета инициализируется на основании схемы из общих макетов:
//               //	Если КлючСхемы <> "1" Тогда
//               //		КлючСхемы = "1";
//               //		СхемаКД = ПолучитьОбщийМакет("МояОбщаяСхемаКомпоновки");
//               //		ОтчетыСервер.ПодключитьСхему(ЭтотОбъект, Контекст, СхемаКД, КлючСхемы);
//               //	КонецЕсли;
//               //
//               // 2. Схема зависит от значения параметра, выведенного в пользовательские настройки отчета:
//               //	Если ТипЗнч(НовыеПользовательскиеНастройкиКД) = Тип("ПользовательскиеНастройкиКомпоновкиДанных") Тогда
//               //		ПолноеИмяОбъектаМетаданных = "";
//               //		Для Каждого ЭлементКД Из НовыеПользовательскиеНастройкиКД.Элементы Цикл
//               //			Если ТипЗнч(ЭлементКД) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
//               //				ИмяПараметра = Строка(ЭлементКД.Параметр);
//               //				Если ИмяПараметра = "ОбъектМетаданных" Тогда
//               //					ПолноеИмяОбъектаМетаданных = ЭлементКД.Значение;
//               //				КонецЕсли;
//               //			КонецЕсли;
//               //		КонецЦикла;
//               //		Если КлючСхемы <> ПолноеИмяОбъектаМетаданных Тогда
//               //			КлючСхемы = ПолноеИмяОбъектаМетаданных;
//               //			СхемаКД = Новый СхемаКомпоновкиДанных;
//               //			// Наполнение схемы...
//               //			ОтчетыСервер.ПодключитьСхему(ЭтотОбъект, Контекст, СхемаКД, КлючСхемы);
//               //		КонецЕсли;
//               //	КонецЕсли;
//               //
//               Процедура ПередЗагрузкойНастроекВКомпоновщик(Контекст, КлючСхемы, КлючВарианта, НовыеНастройкиКД, НовыеПользовательскиеНастройкиКД) Экспорт
//               	// Обработка события.
//               КонецПроцедуры
//
//           ** ПередЗагрузкойВариантаНаСервере - Булево - если Истина, то в модуле объекта отчета
//               следует определить обработчик события по шаблону:
//
//               // Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//               //
//               // Параметры:
//               //   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//               //   НовыеНастройкиКД - НастройкиКомпоновкиДанных - Настройки для загрузки в компоновщик настроек.
//               //
//               // См. ОтчетыПереопределяемый.ПередЗагрузкойВариантаНаСервере().
//               //
//               Процедура ПередЗагрузкойВариантаНаСервере(Форма, НовыеНастройкиКД) Экспорт
//               	// Обработка события.
//               КонецПроцедуры
//
//           ** ПриЗагрузкеВариантаНаСервере - Булево - если Истина, то в модуле объекта отчета
//               следует определить обработчик события по шаблону:
//
//               // Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//               //
//               // Параметры:
//               //   Форма - ФормаКлиентскогоПриложения - форма отчета.
//               //   НовыеНастройкиКД - НастройкиКомпоновкиДанных - настройки для загрузки в компоновщик настроек.
//               //
//               // См. синтакс-помощник "Расширение управляемой формы для отчета.ПриЗагрузкеВариантаНаСервере" в синтакс-помощнике.
//               //
//               Процедура ПриЗагрузкеВариантаНаСервере(Форма, НовыеНастройкиКД) Экспорт
//               	// Обработка события.
//               КонецПроцедуры
//
//           ** ПриЗагрузкеПользовательскихНастроекНаСервере - Булево - если Истина, то в модуле объекта отчета
//               следует определить обработчик события по шаблону:
//
//               // Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//               //
//               // Параметры:
//               //   Форма - ФормаКлиентскогоПриложения - форма отчета.
//               //   НовыеПользовательскиеНастройкиКД - ПользовательскиеНастройкиКомпоновкиДанных -
//               //       Пользовательские настройки для загрузки в компоновщик настроек.
//               //
//               // См. синтакс-помощник "Расширение управляемой формы для отчета.ПриЗагрузкеПользовательскихНастроекНаСервере"
//               //    в синтакс-помощнике.
//               //
//               Процедура ПриЗагрузкеПользовательскихНастроекНаСервере(Форма, НовыеПользовательскиеНастройкиКД) Экспорт
//               	// Обработка события.
//               КонецПроцедуры
//
//           ** ПередЗаполнениемПанелиБыстрыхНастроек - Булево - если Истина, то в модуле объекта отчета
//               следует определить обработчик события по шаблону:
//
//               // Вызывается до перезаполнения панели настроек формы отчета.
//               //
//               // Параметры:
//               //   Форма - ФормаКлиентскогоПриложения - форма отчета.
//               //   ПараметрыЗаполнения - Структура - параметры, которые будут загружены в отчет.
//               //
//               Процедура ПередЗаполнениемПанелиБыстрыхНастроек(Форма, ПараметрыЗаполнения) Экспорт
//               	// Обработка события.
//               КонецПроцедуры
//
//           ** ПослеЗаполненияПанелиБыстрыхНастроек - Булево - если Истина, то в модуле объекта отчета
//               следует определить обработчик события по шаблону:
//
//               // Вызывается после перезаполнения панели настроек формы отчета.
//               //
//               // Параметры:
//               //   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//               //   ПараметрыЗаполнения - Структура - параметры, которые будут загружены в отчет.
//               //
//               Процедура ПослеЗаполненияПанелиБыстрыхНастроек(Форма, ПараметрыЗаполнения) Экспорт
//               	// Обработка события.
//               КонецПроцедуры
//
//           ** ПриОпределенииПараметровВыбора - Булево - если Истина, то в модуле объекта отчета
//               следует определить обработчик события по шаблону:
//
//               // Вызывается в форме отчета перед выводом настройки.
//               //
//               // Параметры:
//               //   Форма - ФормаКлиентскогоПриложения, Неопределено - форма отчета.
//               //   СвойстваНастройки - Структура - описание настройки отчета, которая будет выведена в форме отчета.
//               //       * ОписаниеТипов - ОписаниеТипов - тип настройки.
//               //       * ЗначенияДляВыбора - СписокЗначений - объекты, которые будут предложены пользователю в списке
//                          выбора. Дополняет список объектов, уже выбранных пользователем ранее.
//               //       * ЗапросЗначенийВыбора - Запрос - возвращает объекты, которыми необходимо дополнить ЗначенияДляВыбора.
//               //           Первой колонкой (с 0м индексом) должен выбираться объект,
//               //           который следует добавить в ЗначенияДляВыбора.Значение.
//               //           Для отключения автозаполнения
//               //           в свойство ЗапросЗначенийВыбора.Текст следует записать пустую строку.
//               //       * ОграничиватьВыборУказаннымиЗначениями - Булево - когда Истина, то выбор пользователя будет
//               //           ограничен значениями, указанными в ЗначенияДляВыбора (его конечным состоянием).
//               //
//               // См. также:
//               //   ОтчетыПереопределяемый.ПриОпределенииПараметровВыбора().
//               //
//               Процедура ПриОпределенииПараметровВыбора(Форма, СвойстваНастройки) Экспорт
//               	// Обработка события.
//               КонецПроцедуры
//
//           ** ПриОпределенииИспользуемыхТаблиц - Булево - если Истина, то в модуле объекта отчета
//               следует определить обработчик события по шаблону:
//
//               // Список регистров и других объектов метаданных, по которым формируется отчет.
//               //   Используется для проверки что отчет может содержать не обновленные данные.
//               //
//               // Параметры:
//               //   КлючВарианта - Строка, Неопределено -
//               //       Имя предопределенного или уникальный идентификатор пользовательского варианта отчета.
//               //       Неопределено когда вызов для варианта расшифровки или без контекста.
//               //   ИспользуемыеТаблицы - Массив из Строка -
//               //       Полные имена объектов метаданных (регистров, документов и других таблиц),
//               //       данные которых выводятся в отчете.
//               //
//               // Пример:
//               //	ИспользуемыеТаблицы.Добавить(Метаданные.Документы.<ИмяДокумента>.ПолноеИмя());
//               //
//               Процедура ПриОпределенииИспользуемыхТаблиц(КлючВарианта, ИспользуемыеТаблицы) Экспорт
//               	// Обработка события.
//               КонецПроцедуры
//
//           ** ДополнитьСвязиОбъектовМетаданных - Булево - если Истина, то в модуле объекта отчета
//               следует определить обработчик события по шаблону:
//
//               // Дополнительные связи настроек этого отчета.
//               // В данной процедуре следует описать дополнительные зависимости объектов метаданных
//               //   конфигурации, которые будут использоваться для связи настроек отчетов.
//               //
//               // Параметры:
//               //   СвязиОбъектовМетаданных - ТаблицаЗначений - таблица связей.
//               //       * ПодчиненныйРеквизит - Строка - имя реквизита подчиненного объекта метаданных.
//               //       * ПодчиненныйТип      - Тип    - тип подчиненного объекта метаданных.
//               //       * ВедущийТип          - Тип    - тип ведущего объекта метаданных.
//               //
//               // См. также:
//               //   ОтчетыПереопределяемый.ДополнитьСвязиОбъектовМетаданных().
//               //
//               Процедура ДополнитьСвязиОбъектовМетаданных(СвязиОбъектовМетаданных) Экспорт
//               	// Обработка события.
//               КонецПроцедуры
//